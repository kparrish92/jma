"Lecturer",
"Other")))))
result_21_22 %>%
group_by(category) %>%
summarise(n =n())
View(result_21_22)
View(result_21_22)
result_21_22 %>%
group_by(category) %>%
summarise(n =n())
View(result_21_22)
result_21_22 %>%
group_by(category) %>%
summarise(n =n())
library(here)
source(here("job_count_scripts", "2023_2024_listings.R"))
# Split the data into lines
lines <- unlist(strsplit(data, "\n"))
# Initialize vectors for each column
uni <- character(length(lines))
job_title <- character(length(lines))
date <- character(length(lines))
# Extract the parts for each line
for (i in seq_along(lines)) {
parts <- unlist(strsplit(lines[i], ",", fixed = TRUE))
uni[i] <- parts[1]  # University name
job_title[i] <- parts[2]  # Job title
# Find the part with the date
date_part <- parts[grep("DUE|Starts", parts, ignore.case = TRUE)]
# Extract the date
if (length(date_part) > 0) {
date[i] <- trimws(gsub(".*(DUE|Starts) *(.*)", "\\2", date_part))
} else {
date[i] <- NA
}
}
# Create a data frame with the extracted columns
result_23_24 <- data.frame(uni = uni, job_title = job_title, stringsAsFactors = FALSE)
# Mutate the data frame to add a new column 'category'
result_23_24$category <- ifelse(grepl("Visiting", result_23_24$job_title, ignore.case = TRUE),
"VAP",
ifelse(grepl("NTT|Non-tenure track|non tenure track", result_23_24$job_title, ignore.case = TRUE),
"NTT",
ifelse(grepl("Tenure Track|tenure-track|TT", result_23_24$job_title, ignore.case = TRUE),
ifelse(grepl("Linguistics", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Linguistics",
ifelse(grepl("Literature", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Literature",
"Assistant Professor (TT) - Unspecified")),
ifelse(grepl("Assistant Professor", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Unspecified",
ifelse(grepl("Lecturer", result_23_24$job_title, ignore.case = TRUE),
"Lecturer",
"Other")))))
result_23_24 %>%
group_by(category) %>%
summarise(n =n())
View(result_23_24)
library(here)
source(here("job_count_scripts", "2021_2022_listings.R"))
# Split the data into lines
lines <- unlist(strsplit(data, "\n"))
# Initialize vectors for each column
uni <- character(length(lines))
job_title <- character(length(lines))
date <- character(length(lines))
# Extract the parts for each line
for (i in seq_along(lines)) {
parts <- unlist(strsplit(lines[i], ",", fixed = TRUE))
uni[i] <- parts[1]  # University name
job_title[i] <- parts[2]  # Job title
# Find the part with the date
date_part <- parts[grep("DUE|Starts", parts, ignore.case = TRUE)]
# Extract the date
if (length(date_part) > 0) {
date[i] <- trimws(gsub(".*(DUE|Starts) *(.*)", "\\2", date_part))
} else {
date[i] <- NA
}
}
# Create a data frame with the extracted columns
result_21_22 <- data.frame(uni = uni, job_title = job_title, stringsAsFactors = FALSE)
# Mutate the data frame to add a new column 'category'
result_21_22$category <- ifelse(grepl("Visiting", result_21_22$job_title, ignore.case = TRUE),
"VAP",
ifelse(grepl("NTT|Non-tenure track|non tenure track", result_21_22$job_title, ignore.case = TRUE),
"NTT",
ifelse(grepl("Tenure Track|tenure-track|TT", result_21_22$job_title, ignore.case = TRUE),
ifelse(grepl("Linguistics", result_21_22$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Linguistics",
ifelse(grepl("Literature", result_21_22$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Literature",
"Assistant Professor (TT) - Unspecified")),
ifelse(grepl("Assistant Professor", result_21_22$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Unspecified",
ifelse(grepl("Lecturer", result_21_22$job_title, ignore.case = TRUE),
"Lecturer",
"Other")))))
result_21_22 %>%
group_by(category) %>%
summarise(n =n())
result_21_22 %>%
mutate(cycle = "2021-2022") %>%
write.csv(here("job_count_scripts_all_jobs.csv"))
result_21_22 %>%
mutate(cycle = "2021-2022") %>%
write.csv(here("job_count_scripts_all_jobs", "all_jobs", "2021_2022.csv"))
result_21_22 %>%
mutate(cycle = "2021-2022") %>%
write.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
library(here)
source(here("job_count_scripts", "2023_2024_listings.R"))
# Split the data into lines
lines <- unlist(strsplit(data, "\n"))
# Initialize vectors for each column
uni <- character(length(lines))
job_title <- character(length(lines))
date <- character(length(lines))
# Extract the parts for each line
for (i in seq_along(lines)) {
parts <- unlist(strsplit(lines[i], ",", fixed = TRUE))
uni[i] <- parts[1]  # University name
job_title[i] <- parts[2]  # Job title
# Find the part with the date
date_part <- parts[grep("DUE|Starts", parts, ignore.case = TRUE)]
# Extract the date
if (length(date_part) > 0) {
date[i] <- trimws(gsub(".*(DUE|Starts) *(.*)", "\\2", date_part))
} else {
date[i] <- NA
}
}
# Create a data frame with the extracted columns
result_23_24 <- data.frame(uni = uni, job_title = job_title, stringsAsFactors = FALSE)
# Mutate the data frame to add a new column 'category'
result_23_24$category <- ifelse(grepl("Visiting", result_23_24$job_title, ignore.case = TRUE),
"VAP",
ifelse(grepl("NTT|Non-tenure track|non tenure track", result_23_24$job_title, ignore.case = TRUE),
"NTT",
ifelse(grepl("Tenure Track|tenure-track|TT", result_23_24$job_title, ignore.case = TRUE),
ifelse(grepl("Linguistics", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Linguistics",
ifelse(grepl("Literature", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Literature",
"Assistant Professor (TT) - Unspecified")),
ifelse(grepl("Assistant Professor", result_23_24$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Unspecified",
ifelse(grepl("Lecturer", result_23_24$job_title, ignore.case = TRUE),
"Lecturer",
"Other")))))
result_23_24 %>%
group_by(category) %>%
summarise(n =n())
result_23_24 %>%
mutate(cycle = "2023-2024") %>%
write.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
source(here("job_count_scripts", "2022_2023_listings.R"))
# Split the data into lines
lines <- unlist(strsplit(data, "\n"))
# Initialize vectors for each column
uni <- character(length(lines))
job_title <- character(length(lines))
deadline <- character(length(lines))
# Extract the parts for each line
for (i in seq_along(lines)) {
# Extract the university name
uni[i] <- sub("\\..*", "", lines[i])  # Part before the first period
# Extract the job title between the second and third periods
job_title[i] <- unlist(strsplit(lines[i], "\\."))[2]
job_title[i] <- trimws(job_title[i])
# Extract the deadline part
deadline_part <- sub(".*Deadline: *(.*)", "\\1", lines[i])
# Check if a deadline was found
if (nchar(deadline_part) != nchar(lines[i])) {
deadline[i] <- trimws(unlist(strsplit(deadline_part, "\\."))[1])
} else {
deadline[i] <- NA
}
}
# Create a data frame with the extracted columns
result_22_23 <- data.frame(uni = uni, job_title = job_title, stringsAsFactors = FALSE)
unique(result_22_23$uni)
unique(result_22_23$job_title)
# Mutate the data frame to add a new column 'category'
result_22_23$category <- ifelse(grepl("Visiting", result_22_23$job_title, ignore.case = TRUE),
"VAP",
ifelse(grepl("NTT|Non-tenure track|non tenure track", result_22_23$job_title, ignore.case = TRUE),
"NTT",
ifelse(grepl("Tenure Track|tenure-track|TT", result_22_23$job_title, ignore.case = TRUE),
ifelse(grepl("Linguistics", result_22_23$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Linguistics",
ifelse(grepl("Literature", result_22_23$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Literature",
"Assistant Professor (TT) - Unspecified")),
ifelse(grepl("Assistant Professor", result_22_23$job_title, ignore.case = TRUE),
"Assistant Professor (TT) - Unspecified",
ifelse(grepl("Lecturer", result_22_23$job_title, ignore.case = TRUE),
"Lecturer",
"Other")))))
# Display the modified data frame
result_22_23 %>%
group_by(category) %>%
summarize(n = n())
result_22_23 %>%
mutate(cycle = "2022-2023") %>%
write.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
View(alljobs)
alljobs = rbind(a,b,c)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
View(c)
c %>%
filter(catgory == "Assistant Professor (TT) - Unspecified")
c %>%
filter(catgory == "Assistant Professor (TT) - Unspecified")
c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
uns = c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
View(uns)
View(uns)
unique(uns$job_title)
View(c)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
library(here)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
uns = c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
unique(uns$job_title)
View(alljobs)
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
uns = c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
unique(uns$job_title)
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
View(alljobs)
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
uns = c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
unique(uns$job_title)
View(alljobs)
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
View(a)
View(a)
library(here)
library(tidyverse)
a=read.csv(here("job_count_scripts", "all_jobs", "2021_2022.csv"))
b=read.csv(here("job_count_scripts", "all_jobs", "2022_2023.csv"))
c=read.csv(here("job_count_scripts", "all_jobs", "2023_2024.csv"))
alljobs = rbind(a,b,c)
alljobs %>%
group_by(category) %>%
summarize(n = n())
uns = c %>%
filter(category == "Assistant Professor (TT) - Unspecified")
unique(uns$job_title)
### A script to examine when jobs send interviews in relation to their due date
library(tidyverse)
## year 2022
jobs_2022 = data.frame(due_date = c("2022-10-31", "2022-10-31", "2022-11-01",
"2022-11-28", "2022-12-05", "2022-12-16",
"2023-01-15", "2022-12-19", "2023-01-01",
"2023-01-15", "2023-02-14", "2023-02-14",
"2023-03-01"),
first_word = c("2022-11-07", "2022-11-28", "2022-11-29", "2022-12-05", "2022-12-28",
"2023-01-04", "2023-01-19", "2023-01-24", "2023-01-30", "2023-02-02",
"2023-02-15", "2023-03-03", "2023-03-10"),
uni_name = c("Oregon State", "Skidmore", "Iowa State",
"Bradley University", "UNC Wilmington", "App State",
"St Louis University", "East Carolina", "Florida International University",
"Missouri", "Bowdoin", "Winthrop",
"Colby"),
tt_or_not = c("TT", "TT", "TT",
"TT", "TT", "TT",
"TT", "TT", "TT",
"TT", "NTT", "NTT",
"NTT")) %>%
mutate(difference = difftime(first_word, due_date))
View(jobs_2022)
library(here)
library(tidyverse)
job_data = read.csv(here("data", "jm_manual.csv"))
View(job_data)
View(jobs_2022)
?difftime
job_data = read.csv(here("data", "jm_manual.csv")) %>%
mutate(deadline_to_interview = difftime(due_date, interview_data))
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/")
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date))
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date)
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(interview_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(interview_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date)
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(interview_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(interview_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
mutate(deadline_to_interview = difftime(due_date, interview_data))
View(job_data)
difftime(job_data$due_date[1], job_data$interview_date[1])
difftime(job_data$due_date[3], job_data$interview_date[3])
job_data$due_date[3]
job_data$interview_date[3]
difftime(job_data$interview_date[3], job_data$due_date[3])
glimpse(job_data)
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(interview_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(interview_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(campus_invite_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(campus_invite_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(first_offer_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(first_offer_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date)
View(job_data)
library(here)
library(tidyverse)
job_data = read.csv(here("data", "jm_manual.csv")) %>%
separate(due_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(due_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(interview_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(interview_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(campus_invite_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(campus_invite_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date) %>%
separate(first_offer_date, into = c("month", "date", "year"), sep = "/") %>%
mutate(first_offer_date = paste0(year,"-",month,"-",date)) %>%
select(-year,-month,-date)
View(job_data)
for (i in 1:nrow(job_data)) {
difftime(job_data$interview_date[i], job_data$due_date[i])
}
job_data = read.csv(here("data", "jm_manual.csv"))
library(here)
library(tidyverse)
job_data = read.csv(here("data", "jm_manual.csv"))
View(job_data)
?pivot_longer
job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number")
library(here)
library(tidyverse)
job_data = read.csv(here("data", "jm_manual.csv"))
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number")
View(e)
library(here)
library(tidyverse)
library(brms)
job_data = read.csv(here("data", "jm_manual.csv"))
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number")
brm(number ~ type, data = e)
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number") %>%
filter(number != "N/A")
library(brms)
job_data = read.csv(here("data", "jm_manual.csv"))
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number") %>%
filter(number != "N/A")
e$number = as.numeric(e$number)
brm(number ~ type, data = e)
brm(number ~ type + (1 | place) + (1 | job_type), data = e)
mod = brm(number ~ type + (1 | place), data = e)
brms::conditional_effects(mod)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
summary(mod)
mcmc_areas(posterior,
pars = c("b_Intercept",
"typedays_to_offer",
"typedays_to_visit"),
prob = 0.8) + plot_title + theme_minimal()
library(bayesplot)
mcmc_areas(posterior,
pars = c("b_Intercept",
"typedays_to_offer",
"typedays_to_visit"),
prob = 0.8) + plot_title + theme_minimal()
posterior<- as.matrix(mod)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
library(bayesplot)
mcmc_areas(posterior,
pars = c("b_Intercept",
"typedays_to_offer",
"typedays_to_visit"),
prob = 0.8) + plot_title + theme_minimal()
library(bayesplot)
mcmc_areas(posterior,
pars = c("b_Intercept",
"b_typedays_to_offer",
"b_typedays_to_visit"),
prob = 0.8) + plot_title + theme_minimal()
library(here)
library(tidyverse)
library(brms)
job_data = read.csv(here("data", "jm_manual.csv"))
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number") %>%
filter(number != "N/A")
View(e)
summary(mod)
cef = brms::conditional_effects(mod)
View(cef)
cef[["type"]]
library(here)
library(tidyverse)
library(brms)
job_data = read.csv(here("data", "jm_manual.csv"))
e = job_data %>%
pivot_longer(cols = days_to_interview:days_to_offer,
names_to = "type",
values_to = "number") %>%
filter(number != "N/A")
e$number = as.numeric(e$number)
mod = brm(number ~ type + (1 | place), data = e,
file = here("data", "b_mod.brms"))
cef = brms::conditional_effects(mod)
summary(mod)
posterior<- as.matrix(mod)
plot_title <- ggtitle("Posterior distributions",
"with medians and 80% intervals")
library(bayesplot)
mcmc_areas(posterior,
pars = c("b_Intercept",
"b_typedays_to_offer",
"b_typedays_to_visit"),
prob = 0.8) + plot_title + theme_minimal()
summary(mod)
81-24
